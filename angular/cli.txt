npm i @angular/cli -g

ng new myapp
ng new myapp --style=scss --routing -S
ng new myapp --style=scss --routing -S -g --minimal --skip-install

note: if a symlink is in path of the proj, ng throws erros and can't compile.
--------------------------------------------------------------------------------
ng n|new
	--directory=myapp
	--style=scss		
	--routing
	--minimal		without any testing frameworks
	--skipInstall
	--createApplication	create init app in src
	--commit		initial git commit
	--skip-install
	--strict		stricter typescript
	-S, --skipTests
	-g, --skipGit
	-s, --inline-style
	-t, --inline-template
	-v, --verbose		log more details
--------------------------------------------------------------------------------
ng s|serve
	-o, --open		open browser
	--port=4200		specify port
	--source-map=false
	--hmr=false
	--liveReload=true
	--optimization=false
	--watch=true
--------------------------------------------------------------------------------
ng g|generate <schematic> [options]

ng g component myComponent
ng g c myComponent -m myModule
	-m, --module=module		the declaring NgModule
	-s, --inlineStyle		inline css in component.ts file (only possible for css, not scss,...)
	-t, --inlineTemplate		inline template in component.ts file
	--spec false
	--export			export it in declaring NgModule
	--skipImport			dont import into owning NgModule
	--flat				create top level component (under proj root)
	--project=project		name of the project to add this to
	--selector			html selector for this component
	--type=type			str to append to filename "name.type.ts"

ng g service myService
ng g directive myDirective
ng g webWorker myWebWorker

ng g m myModule
ng g m myModule --routing -m app --route mypage
	-m, --module=module		the declaring NgModule
	--flat				create top level module (under proj root)
	--routing			create routing module
	--route				route path for a lazy-loaded module
	--routingScope=Child|Root	scope for the new routing module

schematics:
	appShell			app shell for running a server-side version of an app
	application
	class				generic class definition
c	component			generic component definition
d	directive
	enum				generic enum definition
	guard				generic route guard definition
	interceptor
	interface
	library
m	module				eneric NgModule definition
	pipe
s	service				generic service definition
	serviceWorker
	webWorker
--------------------------------------------------------------------------------
ng help
ng [command name] --help