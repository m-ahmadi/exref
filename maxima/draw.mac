draw2d(argument_1, ...) == draw(gr2d(...)) // pkg
gr2d(options, ..., graphic_object, ...)

draw3d(argument_1, ...) == draw(gr3d(...))
gr3d(options, ..., graphic_object, ...)

bars([x1,h1,w1], [x2,h2,w2, ...]) fill_color, fill_density, key, line_width
ellipse(xc,yc,a,b,ang1,ang2) border, color, fill_color, key, line_type, line_width, nticks, transparent

explicit(expr,var,minval,maxval)
explicit(fcn,var,minval,maxval)
explicit(expr,var1,minval1,maxval1,var2,minval2,maxval2)
explicit(fcn,var1,minval1,maxval1,var2,minval2,maxval2)
adapt_depth, draw_realpart, color, filled_func, fill_color, key, line_width, line_type, nticks

image(im,x0,y0,width,height)

implicit(fcn,x,xmin,xmax,y,ymin,ymax)
implicit(fcn,x,xmin,xmax,y,ymin,ymax,z,zmin,zmax)

label [label, [string, x, y], ...]

parametric(xfun,yfun,par,parmin,parmax)
parametric(xfun,yfun,zfun,par,parmin,parmax)

points([[x1,y1], [x2,y2],...])
points([x1,x2,...], [y1,y2,...])
points([y1,y2,...])
points([[x1,y1,z1], [x2,y2,z2],...])
points([x1,x2,...], [y1,y2,...], [z1,z2,...])
points(matrix)
points(1d_y_array)
points(1d_x_array, 1d_y_array)
points(1d_x_array, 1d_y_array, 1d_z_array)
points(2d_xy_array)
points(2d_xyz_array)

polar(radius,ang,minang,maxang)

polygon([[x1, y1], [x2, y2], ...])
polygon([x1, x2, ...], [y1, y2, ...])

quadrilateral(point_1, point_2, point_3, point_4)
rectangle([x1,y1], [x2,y2])
triangle(point_1, point_2, point_3)

vector([x,y], [dx,dy])
vector([x,y,z], [dx,dy,dz])

// 3d only
cylindrical (radius, z, minz, maxz, azi, minazi, maxazi)
elevation_grid(mat,x0,y0,width,height)
mesh(row_1,row_2,...)
parametric_surface(xfun, yfun, zfun, par1, par1min, par1max, par2, par2min, par2max)
spherical(radius, azi, minazi, maxazi, zen, minzen, maxzen)
tube(xfun,yfun,zfun,rfun,p,pmin,pmax)