for /L %i  in (1, 1, 100) do echo %i				start at 1, step by one, finish at 100
for /L %i in (1, 1, 4) do (@echo %i && @timeout 2)		multiple commands
for /f "tokens=4,5*" %i in ('dir') do @echo %i %j %k		get 4th and 5th columns of dir result
for /f "tokens=3" %i in ('reg query HKLM\x /ve') do echo %i	get 3rd column of result
for /f %i in (file.txt) do @echo %i				first token of each line
for /f "tokens=*" %i in (file.txt) do @echo %i			whole line
for /f "tokens=* eol=;" %i in (file.txt) do @echo %i		... specific eol
for /f %i in ('tasklist ^| findstr chrome.exe') do @echo %i	pipe needs escape

for %i in (aa bb cc*) do @echo %i				iterate over strings (can't escape * ? in string)
for /d %i in (a,b,c,d) do @echo %i				iterate over folder names
for /d %i in (dir*) do @echo %i					iterate folder names (that match wildcard)
for /d %i in (*) do type %i/file.txt >> .\out.txt		cat all file.txt in all dirs into out.txt

for /r %i in (*.csv) do @type "%i" | find /c /v ""		count lines of all *.csv files
(for /r %i in (*.csv) do @type "%i") | find /c /v ""		sum of above

for %i in (*.csv) do @echo %~ni					get file name without extension
for /f %i in ('dir *.zip /b') do @winrar x %~ni.zip * %~ni\	... extract all .zip files

for /f "tokens=2" %i in ('tasklist ^| findstr chrome.exe') do @taskkill /pid %i /f	get chrome.exe pids and force kill all
--------------------------------------------------------------------------------
syntax:
FOR %variable IN (set) DO command [command-parameters]
%variable		single letter replaceable parameter
(set)			a set of one or more files. (wildcards are possible)
command			the command to carry out for each file
command-parameters	parameters or switches for the specified command

FOR /D %variable IN (set) DO command [command-parameters]
FOR /R [[drive:]path] %variable IN (set) DO command [command-parameters]
FOR /L %variable IN (start,step,end) DO command [command-parameters]

FOR /F ["options"] %variable IN (file-set) DO command [command-parameters]
FOR /F ["options"] %variable IN ("string") DO command [command-parameters]
FOR /F ["options"] %variable IN ('command') DO command [command-parameters]


"options"
eol=c		specifies an end of line comment character (just one)
skip=n		specifies the number of lines to skip at the beginning of the file.
delims=xxx	specifies a delimiter set.  This replaces the default delimiter set of space and tab.
tokens=x,y,m-n	specifies which tokens from each line are to be passed to the for body for each iteration.
		This will cause additional variable names to be allocated.
		The m-n form is a range, specifying the mth through the nth tokens.
		If the last character in the tokens= string is an asterisk, then an additional variable is allocated and receives the remaining text on the line after the last token parsed.
usebackq	a back-quoted string is executed as a command
		and a single quoted string is a literal string command and allows the use of double quotes to quote file names in file-set.
--------------------------------------------------------------------------------