set | grep windows_								stdio
grep -i "hello world" menu.h main.c						search in specified files
grep -R --exclude-dir=node_modules "some pattern" /path/to/search		search in dir
grep -i -r "what up" --exclude=package*.json					search in current dir
grep -r ^some\sregex$ D:\xampp\htdocs
---------------------------------------------------------------------------------------------------------------------------------
help

Pattern selection and interpretation:
-i, --ignore-case		ignore case distinctions
-e, --regexp=PATTERN		use PATTERN for matching
-w, --word-regexp		force PATTERN to match only whole words
-x, --line-regexp		force PATTERN to match only whole lines
-z, --null-data			a data line ends in 0 byte, not newline
-E, --extended-regexp		PATTERN is an extended regular expression
-F, --fixed-strings		PATTERN is a set of newline-separated strings
-G, --basic-regexp		PATTERN is a basic regular expression (default)
-P, --perl-regexp		PATTERN is a Perl regular expression
-f, --file=FILE			obtain PATTERN from FILE

Output control:
-m, --max-count=NUM		stop after NUM selected lines
-b, --byte-offset		print the byte offset with output lines
-n, --line-number		print line number with output lines
-H, --with-filename		print file name with output lines
-h, --no-filename		suppress the file name prefix on output
-o, --only-matching		show only the part of a line matching PATTERN
-q, --quiet, --silent		suppress all normal output
-d, --directories=ACTION	how to handle directories; ACTION is 'read', 'recurse', or 'skip'
-r, --recursive			same as --directories=recurse
-R, --dereference-recursive	same as --directories=recurse, but follow all symlinks
-D, --devices=ACTION		how to handle devices, FIFOs and sockets; ACTION is 'read' or 'skip'
-L, --files-without-match	print only names of FILEs with no selected lines
-l, --files-with-matches	print only names of FILEs with selected lines
-c, --count			print only a count of selected lines per FILE
-T, --initial-tab		make tabs line up (if needed)
-Z, --null			print 0 byte after FILE name
    --line-buffered		flush output on every line
    --label=LABEL		use LABEL as the standard input file name prefix
    --binary-files=TYPE		assume that binary files are TYPE; TYPE is 'binary', 'text', or 'without-match'
-a, --text			same as --binary-files=text
-I				same as --binary-files=without-match
    --include=FILE_PATTERN	search only files that match FILE_PATTERN
    --exclude=FILE_PATTERN	skip files and directories matching FILE_PATTERN
    --exclude-from=FILE		skip files matching any file pattern from FILE
    --exclude-dir=PATTERN	directories that match PATTERN will be skipped.

Context control:
-B, --before-context=NUM	print NUM lines of leading context
-A, --after-context=NUM		print NUM lines of trailing context
-C, --context=NUM		print NUM lines of output context
-NUM				same as --context=NUM
-U, --binary			do not strip CR characters at EOL (MSDOS/Windows)
    --color[=WHEN]		use markers to highlight the matching strings; WHEN is 'always', 'never', or 'auto' (alias: --colour)

Misc:
-s, --no-messages		suppress error messages
-v, --invert-match		select non-matching lines
-V, --version			display version information and exit
    --help			display this help text and exit

When FILE is '-', read standard input.
With no FILE, read '.' if recursive, '-' otherwise.
With fewer than two FILEs, assume -h.
Exit status is 0 if any line is selected, 1 otherwise;
if any error occurs and -q is not given, the exit status is 2.
---------------------------------------------------------------------------------------------------------------------------------
