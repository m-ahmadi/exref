git commit				creates new commit (opens editor)
git commit -m "message"			message argument
git commit -c ORIG_HEAD			message from last message (opens editor)
git commit -F file.txt			read commit message from file
git commit -a				stage already added files that have been modified and deleted (not new files you haven't added)
git commit -am "message"		-a and commit with message in one command
git commit -m "foo" --no-verify		skip pre-commit and commit-msg hooks

git commit -C <commit_hash>		use msg of another commit (including time & author)
git commit -c <commit_hash>		... but open editor

git commit --amend -m "a"		git reset HEAD~ && git add . && git commit -m "hi"
git commit --amend			... open editor with msg of prev commit
git commit --amend --no-edit		... use prev commit msg
git commit --amend --reset-author	renew time
git commit --amend --date=now		...

--------------------------------------------------------------------------------
delete commit and do again

git commit -m "Something terribly misguided"
git reset HEAD~
git add .
git commit -m "new message"
git push -f

--------------------------------------------------------------------------------
50/72 commit message format
first line 50 chars
rest 72 chars
--------------------------------------------------------------------------------
min chars to identify commit hash

github needs at least 7
git default is 7

git rev-parse --short=4 <commit_hash>		ask for shortest and yet unique sha1
--------------------------------------------------------------------------------