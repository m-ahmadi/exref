git commit				creates new commit. opens editor for message
git commit -m "message"			message argument
git commit -F file.txt			read commit message from file
git commit -a				stage already added files that have been modified and deleted (not new files you haven't added)
git commit -am "message"		-a and commit with message in one command

git commit -c <commit_hash>
	creates new commit.
	opens editor to edit the commit message from the specified commit and use it as the new commit message.

git commit --amend
	deletes previous commit and creates new commit. (figuratively)
	reality: creates new commit and makes current branch to point to it. 
	previous commit still exists but will die eventualiy. (git gc or automatically on github)
	opens editor to edit the 2nd last commit message and use it as the new commit message.

git commit --amend -m "message"		--ammend with message argument. (doesn't open editor)

------------------------------------------------------------------------------------------------------------------------
50/72 commit message format
first line 50 chars
rest 72 chars