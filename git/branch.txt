git branch				show all branches (and currently selected)
git branch -a				... show remote ones
git branch -vv				... show upstream ("git status" also shows upstream)

git branch dev				create new branch (from last     commit of currently selected branch)
git branch dev <commit_hash>		...               (...  specific commit ...)
git branch dev HEAD~3			... symolic ref   (...  3rd last commit ...)
git checkout --orphan tmp		... "git init"-like state (on a non-new repository)

git checkout -b dev			create new branch and switch to it
git switch -c dev			... v2.23+
git switch -c dev <commit_hash>		... from specific commit

git checkout dev			switch to another branch	
git switch dev				... v2.23+

git branch -d dev			delete branch
git branch -D dev			... force (shortcut for: --delete --force)
git push -d origin <branch_name>	delete remote branch

git pull origin dev			pull from branch

git push -u origin dev			push branch to remote

git branch --set-upstream-to=origin/master master	set upstream
--------------------------------------------------------------------------------
basic - create branch

git checkout -b iss53			create branch and switch to it
git commit -a -m "fix iss53"		commit in branch
git checkout master			go back to master


basic - create branch and push it to remote

git branch cooler [<start-point>]	create new branch
git switch cooler			switch to it
git commit -a -m "cooler way"		commit in branch
git push origin cooler			push branch to remote
--------------------------------------------------------------------------------
rename branch

git branch -m <newname>			if on the branch
git branch -m <oldname> <newname>	if on another branch

git push -d origin oldname		delete remote
git push -u origin newname		make again + upstream
					or
git push origin :<oldname> <newname>	delete remote and make again
git push origin -u <newname>		+ upstream
--------------------------------------------------------------------------------
clone all remote branches

git clone <repo_url>
git branch -a
 *master
  remotes/origin/HEAD
  remotes/origin/master
  remotes/origin/b1
  remotes/origin/b2

git checkout origin b1
git checkout origin b2
...
--------------------------------------------------------------------------------
move master to another branch and start new master

git checkout -b 1.x		create branch and switch to it
git push origin 1.x		push branch to remote
github-repo -> Settings -> Branches -> Default branch -> change default branch to 1.x (or any non-master)
git push origin :master		deletes remote master

git checkout 1.x		(if not already on non-master)
git branch -d master		delete master branch
git checkout --orphan master	create copy of master but with no parent
git commit -m "init"		commit in fresh master
git push origin master		push it to remote

github-repo -> ... change default branch back to master
--------------------------------------------------------------------------------