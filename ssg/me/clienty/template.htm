<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, maximum-scale=1.0" />
	<title>mydocs</title>
	
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jstree@3.3.17/dist/themes/default/style.min.css" />
	
	<script src="https://cdn.jsdelivr.net/npm/marked@14.1.3/marked.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/marked-gfm-heading-id@4.1.0/lib/index.umd.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/jstree@3.3.17/dist/jstree.min.js"></script>
	<script src="./genJstreeData.js"></script>
</head>

<body>

<div id="_headingsTree"></div>
<div id="_markdownContent">%markdown_content%</div>

<script>
// markdown config
marked.use({pedantic: false, gfm: true, breaks: false});

md = _markdownContent.innerHTML;
headings = undefined;
mdhtml = undefined;

// parse markdown and get headings (in one of two ways)
ALT_WAY = 1;

if (ALT_WAY) {
	// not using "marked-gfm-heading-id" package
	var allTokens = marked.lexer(md);
	var headings = allTokens.filter(i=>i.type==='heading' && typeof i.depth !== 'undefined');
	headings = structuredClone(headings);
	mdhtml = marked.parse(md);
	jstreeData = genJstreeData(headings, true);
	
} else {
	// using "marked-gfm-heading-id"
	// better (cuz need heading id for jstree)
	var {gfmHeadingId, getHeadingList} = markedGfmHeadingId;
	marked.use(gfmHeadingId({prefix: '#'}), {
		hooks: {
			postprocess(html) {
				headings = getHeadingList();
				mdhtml = html;
			}
		}
	});
	marked.parse(md);
	headings = structuredClone(headings);
	jstreeData = genJstreeData(headings);
}

// render html of markdown
_markdownContent.innerHTML = mdhtml;

// init jstree
$('#_headingsTree').jstree({
	core : {
		data : jstreeData
	}
});
</script>
</body>
</html>
